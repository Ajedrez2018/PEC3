{"mappings":"uCAAgBA,EAAIC,GAClB,OAAOC,iBAAiBD,YAGVE,EAAIF,EAASG,GAC3B,IAAKC,IAAMC,KAAOF,EAAK,CACrBG,IAAIC,EAAMJ,EAAIE,GACK,iBAARE,IACTA,GAAY,MAEdP,EAAQQ,MAAMH,GAAOE,EAEvB,OAAOP,WCZOS,EAAIC,GAClBN,IAAMO,EAAMC,SAASC,cAAc,OAEnC,OADAF,EAAID,UAAYA,EACTC,EAGTP,IAAMU,EACe,oBAAZC,UACNA,QAAQC,UAAUC,SACjBF,QAAQC,UAAUE,uBAClBH,QAAQC,UAAUG,oBAClBJ,QAAQC,UAAUI,4BAENH,EAAQjB,EAASqB,GAC/B,IAAKP,EACH,MAAM,IAAIQ,MAAM,wCAGlB,OAAOR,EAAUS,KAAKvB,EAASqB,YAGjBG,EAAOxB,GACjBA,EAAQwB,OACVxB,EAAQwB,SAEJxB,EAAQyB,YACVzB,EAAQyB,WAAWC,YAAY1B,YAKrB2B,EAAc3B,EAAS4B,GACrC,OAAOC,MAAMb,UAAUc,OAAOP,KAAKvB,EAAQ+B,UAAQ,SAAEC,GAAM,OACzDf,EAAQe,EAAOJ,MCjCnBxB,IAAM6B,EACE,KADFA,EAEC,UAFDA,EAGK,CACPC,MAAK,SAAEC,GAAE,MAAA,aAAgBA,GACzBC,KAAI,SAAED,GAAE,MAAA,YAAeA,GACvBE,UAAW,sBANTJ,EAQG,CACLK,MAAO,YACPC,SAAU,eACVC,OAAM,SAAEL,GAAE,MAAA,cAAiBA,GAC3BM,UAAS,SAAEN,GAAE,MAAA,iBAAoBA,IASKO,EAAM,CAAEP,EAAA,sBAI1CQ,EAAgBC,EAAMT,GAE5B,IAAIU,EAAUD,EAAA5C,QAAS6C,YAGXZ,EAAIQ,UAASN,GAE1BU,EAAAC,SAAApC,GAAAqC,aAAAL,EAAAP,IAEeU,EAAAG,IAAAtC,YAETuC,EAAkBL,EAAAT,GAA+CO,EACzDP,GAAAe,YAAkB,WAEhC,OAAAN,EAAAO,SAAAP,EAAA5C,QAAA6C,UAAArB,OAAAS,EAAAQ,UAAAN,QAEeiB,SAAAC,wBCtCZC,EAAa,SAAGtD,GAAAuD,KAAEvD,QAAAA,EACtBuD,KAAAC,SAAA,MAAG,CAAAC,QAAA,CAAAC,cAAA,MAMM1C,UAAS2C,KAAW,SAAYC,EAAAC,QACE,IAAlCN,KAAQC,SAAAI,KAAqCL,KAAKC,SAAAI,GAAA,IACzDL,KAAAC,SAAAI,GAAAE,KAAAD,GAEFN,KAAAvD,QAAA+D,iBAAEH,EAAAC,GAAO,MACA7C,UAASgD,OAAa,SAAcJ,EAAWK,OAClDC,EAAIX,UAGJA,SAAKK,GAAQL,KAAAC,SAAoBI,GAAW9B,QAAS,SAAK+B,GAC5D,SAAAI,GAAcJ,IAAAI,KACbC,EAAAlE,QAAAmE,oBAAAP,EAAAC,GAAA,IACH,OAMAP,EAAAtC,UAAAoD,UAAA,WAEF,IAAA,IAAAC,KAAMd,KAAAC,SAAAD,KAAAS,OAANK,MACkBZ,QAAS1D,IAAC,eAClBmE,EAAGX,KAA8B,OAACe,OAAAC,KAAAhB,KAAAC,UAAAgB,OAAA,SAAAnE,GAEzC,OAAA,IAAA6D,EAAAV,SAAAnD,GAAAoE,kBAKCC,iBAAkBpB,EAAKtC,UAAA2D,GACzB,IAAAC,EAAA,WAEFrB,KAAAsB,cAAE,aCrCOC,EAANT,MACiC,mBAAvBU,OAAGC,YAAkC,OAAA,IAAAA,YAAAX,GAE9C,IAAAY,EAAUrE,SAAAkE,YAAA,eAEb,OADEG,EAAAC,gBAAAb,GAAA,GAAA,OAAAc,GACFF,WAOoBG,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAAC,OAKfC,UAHM,IAANF,IAAMA,GAAA,QAEF,IADJC,IACFA,GAAA,GAEmB,QAAjBH,EAAiBI,EAAA,CACjB,gBACA,kBACA,YACA,IACD,iBAIiB,CAAA,GAAA,SAAAJ,EAWrB,MAAA,IAAA/D,MAAA,oCAXqBmE,EAAA,CAChB,eACA,iBACA,aACA,IACD,0BAW8B7C,EAAA0C,EAAAI,EAAAH,EAAAC,GAAW,IAAAG,EAAAD,EAAA,GAAGE,EAAAF,EAAA,GAAIG,EAAAH,EAAA,UAClCI,EAAAJ,EAAA,GACEK,EAAAL,EAAA,QAEM,IAAnBH,IAAmBA,GAAA,sBAGzB,IAAEvF,EAAW4C,EAAA5C,QAGb4C,EAAAoD,MAAIC,GAAQ,KAKRjG,EAAQ6F,GAAa,IAAEjD,EAAAoD,MAAAC,GAAa,SAKtCjG,EAAQ6F,GAAajD,EAAC+C,GAAW/C,EAAAgD,GAAe,IAAAhD,EAAAoD,MAAAC,GAAA,OAEhDX,MAEOY,cACLpB,EAAQ,aAAcmB,IAGpBX,EAAA,EAAAtF,EAAiBkG,cACnBpB,EAAA,aAA+BgB,IAElCR,EAAA,GAAAtF,EAAAkG,cAAApB,EAAA,aAAAiB,IAEKR,YFtCmB3C,EAAAT,GAC1BQ,EAAAC,EAAAT,GC5CKc,EACJL,EAAAT,GCgF2BgE,CACzBvD,EAAQqD,MC/EID,MAAOC,KAAhBX,GAAAE,IAAAxF,EAAAkG,cAAApB,EAAA,MAAAmB,EAAA,UAAArD,EAAAoD,MAAAC,MD0CEb,EAAAA,EAEPK,EACwDF,EAChCC,GC5CzB,SAAAY,EAAAjE,UAEekE,SAAWlE,EAAE,KAA7B,IFoC0CnB,UAAMsF,aAAY,SAAAtG,GAAA,IAAUuG,EAAAhD,KAAAsB,cAAA/C,QAAA,SAAA0E,GACpE,OAAAA,EAAAxG,UAAAA,QAOF,OALIuG,IACCA,EAAA,IAAAjD,EAAAtD,GACHuD,KAASsB,cAAEf,KAAAyC,IAGbA,GAEE3B,EAAA5D,UAAA2C,KAAA,SAAA3D,EAAA4D,EAAAC,GAEFN,KAAA+C,aAAAtG,GAAE2D,KAAAC,EAAAC,MAEW7C,UAAUgD,OAAS,SAAAhE,EAAA4D,EAAAC,GAE5B,IAAI2C,EAAGjD,KAAO+C,gBAEZE,EAAAxC,OAAKJ,EAAcC,GAEvB2C,EAAA/C,SAEFF,KAAAsB,cAAE4B,OAAAlD,KAAAsB,cAAA6B,QAAFF,GAAA,MACiCxF,UAAKoD,UAAS,WAAAb,KAAEsB,cAAA8B,SAAA,SAAAC,GACzC,OAACA,EAAAxC,eAGTb,KAAAsB,cAAE,MAEQ7D,UAAW6F,KAAA,SAAjBzG,EAAAA,EAAAA,OACAoG,EAAKjD,KAAO+C,aAAWtG,GACrB8G,EAAW,SAAA7B,GACZuB,EAAAxC,OAAAJ,EAAAkD,GACEjD,EAAKoB,WC1EHrB,EAAYkD,QC6BnBC,EAAA,CAMAC,SACS,oBADQpG,UACiB,qBAAcA,SAAAqG,gBAAgBzG,MAChE0G,cACkC,oBAAzBnC,SAAyB,iBACjBA,QAAa,mBAAmBA,OAAAoC,WAAApC,OAAAoC,UAAAC,eAAA,GAAArC,OAAAsC,eAAAzG,oBAAAmE,OAAAsC,eAClDC,kBAAA,oBAAAH,WAAAA,UAAAI,0BCrCc,oBAAAJ,WAAA,UAAAK,KAAAL,WAAAA,UAAAM,qBAEPC,EAAgB9E,GACtBxC,IAAMJ,EAAO4C,EAAA5C,QAEX2H,EAAqBC,KAACC,MAAU7H,EAAM6F,WACtCiC,EAAA9H,EAAe+H,wBAEjBnF,EAAEoF,eAAeJ,KAAOK,MAACH,EAAAI,OACzBtF,EAAEgD,gBAAgBgC,KAAOK,MAACH,EAAAK,QAE1BvF,EAAAwF,aAAapI,EAAWqI,2CAEtBC,EAAAA,SAAkB1F,EAAA2F,kBACH5G,EAAC3B,EAAAiC,EAAAG,KAAA,MAAAuE,SAAA,SAAA6B,GAEhB,OAAQhH,EAAAgH,MAEVxI,EAAYyI,YAAY7F,EAAA2F,iBAEtBD,EAAAA,SAAkB1F,EAAA8F,kBACH/G,EAAC3B,EAAAiC,EAAAG,KAAA,MAAAuE,SAAA,SAAA6B,GAEhB,OAAQhH,EAAAgH,MAGVxI,EACKyI,YAAS7F,EAAA8F,kBAIX9F,EAACQ,SAAUuF,iBAAmB/F,EAAAoF,eAAKpF,EAAgBQ,SAAAwF,oBAAAhG,EAAAwF,cACpDxF,EAAEiG,kBAAe,EACjBjG,EAAEkG,WAAAlG,EAAeoF,eACdpF,EACDmG,iBAEFnG,EAAEoG,WAAApG,EAAcoF,eACVpF,EAAAkG,WAIPlG,EAAAqG,gBACGC,EAAwBtG,EAAAwD,EAAAxD,EAAAkG,WAAAlG,EAAAoF,eAAApF,EAAAwF,eAG5BxF,EACIuG,eAAU/C,GAAAxD,EAAewG,yBACLpJ,EAASqJ,aAAAzG,EAAAkG,WAAwBlG,EAAAqG,kBACvDrG,EAAAwF,aAAAxF,EAAAoF,kBACEpF,EAAAiG,kBAAmB,GACpBjG,EAACQ,SAAAkG,iBAAgB1G,EAAegD,gBAAKhD,EAAAQ,SAAiBmG,oBAAA3G,EAAA+C,eACvD/C,EAAE4G,kBAAe,EACjB5G,EAAE6G,YAAA7G,EAAgBgD,gBACfhD,EACD8G,kBAEF9G,EAAE+G,WAAa/G,EAAAgD,gBACZhD,EAAA6G,YAGJ7G,EAAAgH,iBACmBV,EAAQtG,EAAAwD,EAAAxD,EAAA6G,YAAA7G,EAAAgD,gBAAAhD,EAAA+C,gBAGxB/C,EAAEiH,cAAczD,EAAMuB,GAAe/E,EAAA6G,YACrC7G,EAAAgH,mBAAmBhH,EAAU+C,cAAK/C,EAAAgD,mBAEhChD,EAAA4G,kBAAmB,EAIzB5G,EAAAuG,gBAAoBvG,EAAAkG,WAAAlG,EAAAqG,kBAAArG,EAAAuG,eAAAvG,EAAAkG,WAAAlG,EAAAqG,iBAEhBrG,EAAEiH,eAAgBjH,EACpB6G,YAAQ7G,EAASgH,mBAAehH,EAAAiH,cAAUjH,EAAA6G,YAAA7G,EAAAgH,2BA4Bb5J,EAAU4C,GAAA,IAAEkH,EAAA,CACrC5B,MAAAtF,EAAAkG,cASYlB,KAAGC,MAAQ7H,EAAU6F,WAEnCjD,EAAEmH,MAAAD,EAAAE,KACJpH,EAAAwG,yBAAuBpJ,EAAAqJ,WAAmBzG,EAAAoF,eAAgBpF,EAAAwF,aAE1D0B,EAAYE,KAAOhK,EAACqJ,WAEdzG,EAAEqH,wBAAgBH,EAAWI,OAAAtH,EAAAuH,iBAAAxC,EAE/BmC,EAAWM,IAAGxH,EAAAyH,cAAA1C,IAAE/E,EAAA2F,eAAKuB,OAAkBQ,EAAU,CAAaF,IAAAzC,EAChEQ,OAAEvF,EAAA6G,sCAYJ7G,EAAAmH,MAAMO,EACJC,MAAgB3H,EACdwF,cAAExF,EAAAwG,yBACMpJ,EACNqJ,YAAczG,EAAG4H,gBACL5H,EAAA6H,qBAEZ,EAEJH,EAAgBC,MAAK3H,EAAA4H,gBAAiBxK,EAAQqJ,WAGxCzG,EAAAmH,MAAcO,EAAEN,KAAWpH,EAAAwG,yBAAApJ,EAAAqJ,WAAA,EAAAzG,EAAAoF,eAAApF,EAAAwF,aAAAxF,EAAA8H,eAAA9H,EAAA6H,qBAE5BH,EAAWN,KAApBW,EAAAA,eAAAA,EAAAA,aACE/H,EAAA8F,eAAQ4B,KACR1H,EAAAgI,WAAS,CACVZ,KAAApH,EAAAuG,eACOjB,MAAEtF,EAAAqG,gBAAV0B,EAAAA,qBAEE/H,EAAAiI,WAAU,CACXT,IAAAxH,EAAAiH,cACF1B,OAAAvF,EAAAgH,iBAAAhH,EAAAkI,oBAjFE9K,EAAA4C,GACCA,EAAAiG,iBAAkB7I,EAAU6C,UAAOG,IAAOf,EAAGO,OAAA,OAE7CxC,EAAE6C,UAAcrB,OAAIS,EAAAO,OAAA,MACpBI,EAAAqG,gBAAkB,EACnBrG,EAAAuG,eAAA,EACGnJ,EAAEqJ,YACI,IAARzG,EAAAmH,MAAkBnH,EAAIwF,aAAU,GAEhCxF,EAAA4G,iBAAkBxJ,EAAU6C,UAAOG,IAAOf,EAAGO,OAAA,OAE7CxC,EAAE6C,UAAgBrB,OAACS,EAAAO,OAAA,MACnBI,EAAAgH,iBAAqB,EACtBhH,EAAAiH,cAAA,EACF7J,EAAA6F,UAAA,YAMMqD,EAAUtG,EAAAmI,UAGfnI,EAAAQ,SAAO4H,qBAASD,EAAAnD,KAAAqD,IAAAF,EAAAnI,EAAAQ,SAAA4H,qBACjBpI,EAAAQ,SAAA8H,qBAAAH,EAAAnD,KAAAuD,IAAAJ,EAAAnI,EAAAQ,SAAA8H,qBAEQH,WCpELK,EAAAxI,EAAA8C,GACA,IAAAE,EAAAF,EAAA,GACAC,EAAAD,EAAA,GACA2F,EAAA3F,EAAA,GACA+D,EAAA/D,EAAA,GACAmF,EAAAnF,EAAA,GACAkE,EAAAlE,EAAA,UAGIO,EAAAP,EAAO,GAETgD,EAAiBhD,EAAG,GACpB1F,EAAA4C,EAAA5C,QACAsL,EAAe,OAEM,KACvBC,EAAM,cAGNC,EACE5E,GACFA,EAAA6E,SAAiB7E,EAAE6E,QAAG,KAAA7E,EAAAyE,GAAAzE,EAAA6E,QAAA,GAAAJ,OACtBrL,EAAA6F,GAAgByF,EAAAC,GAAA3E,EAAAyE,GAAAK,GAEhB/I,EAAiBC,EAAAqD,GACjByB,EAAE9E,GACHgE,EAAA+E,8CAIGC,IACF3I,EAAiBL,EAAAqD,GAClBrD,EAAA8F,GAAA7F,UAAArB,OAAAS,EAAAM,kBAEQyB,OAAUpB,EAACiJ,cAApB,YAAAL,YAEMM,EAASlF,EAAKmF,GAGlBT,EAAkBtL,EAAU6F,GAC5BkG,GACKnF,EAAA6E,UAAa7E,EAAAyE,GAAMzE,EAAA6E,QAAe,GAAAJ,OAEvCK,EAAA9E,EAAAyE,MACUzI,EAAA+C,GAAO/C,EAAagD,KAAehD,EAAA6G,GAAgB7G,EAAAgH,IAC1DmC,EAQDnJ,EAAAoJ,MAAArI,KAAef,EAAAiJ,cAAA,YAAAL,IAPf5I,EAAEoJ,MAAArI,KAAAf,EAAAiJ,cAAc,YAAAL,GACjB5I,EAAAoJ,MACGnF,KAAMjE,EAAIiJ,cAAG,UAA0BD,GAGzChF,EAAAqF,kBAGHrJ,EAAA8F,GAAA7F,UAAAG,IAAAf,EAAAM,UAECqE,EAAA+E,kBAED/I,EAAAoJ,MAAArI,KAAAf,EAAAiI,GAAA,aAAA,SAAAjE,GACCkF,EAAYlF,MAEbhE,EAAAoJ,MAAArI,KAAAf,EAAAiI,GAAA,cAAA,SAAAjE,GACFkF,EAAAlF,GAAA,UCtECpD,EAAY,CACZ,sBC3BeZ,GAAgCA,EAAA5C,QAAe4C,EAAEoJ,MAAArI,KAAAf,EAAAiI,WAAA,aAAA,SAAAjE,GAC9D,OAAMA,EAAK+E,6BAKLhI,KAAAf,EAAA8F,eAAuB,aAAK,SAAiB9B,GAEnD,IACAsF,EADUtF,EAASyE,MAAItG,OAAYoH,YAAEvJ,EAAA8F,eAAeX,wBAAAqC,IACpCxH,EAAAiH,cAAA,GAAA,EAEhBjH,EAAE5C,QAAA6F,WAAeqG,EAAAtJ,EAAAgD,gBAClB8B,EAAA9E,GAECgE,EAAA+E,qBAA4D/I,EAAEoJ,MAAArI,KAAAf,EAAAgI,WAAA,aAAA,SAAAhE,GAC9D,OAAMA,EAAK+E,6BAKLhI,KAAAf,EAAA2F,eAAY,aAAiB,SAAc3B,GAEjD,IACAsF,EADUtF,EAAUwF,MAAIrH,OAAYsH,YAAEzJ,EAAc2F,eAAAR,wBAAAiC,KACpCpH,EAAAuG,eAAA,GAAA,EAEhBvG,EAAE5C,QAAAqJ,YAAe6C,EAAAtJ,EAAAoF,eAClBN,EAAA9E,GACFgE,EAAA+E,sBDCC,sBDtBkB/I,KACFA,EAAA,CACd,iBACA,eACA,QACA,aACA,aACA,kBACA,aACD,IACD,qBAEiBA,EAAA,CACf,kBACA,gBACA,QACA,cACA,aACA,mBACA,YACD,IACF,oBCEC0J,kBE3BM1J,OAAoB5C,EAAGuM,EAAAA,gBAyC3B5I,KAAKf,EAAAiJ,cAAqB,WAAA,SACxBjF,GAGFtG,KAAIsG,EAAA4F,oBAAwB5F,EAAC4F,sBAChB5F,EAAA6F,oBA7CTxL,EAAAjB,EAAgB,WAGbiB,EAAA2B,EAAAgI,WAAqB,WAAgB3J,EAA9C2B,EAAAiI,WAAA,WA4CE,KLzCHrC,EK0CKkE,EAAI9L,SAAqB8L,cACvB9L,SAAA8L,cAAgB9J,EAAAiJ,cAAca,uBAGC,aAAxBC,QACLD,EAAgBA,EAAcE,gBAAwBF,mBAM3D,KAAAA,EAAAG,YAAAH,EAAAA,EAAAG,WAAAH,cAEG,GLrDQzL,EAFfuH,EKuDiBkE,ELrDS,4BAA3BzL,EAAAuH,EAAA,6BAAAvH,EAAAuH,EAAA,+BAAAvH,EAAAuH,EAAA,4BKqDkB,OAGd,IAAAsE,EAAU,EACRC,EAAO,WACLC,eAKWF,IAATG,SAAYrK,EAAAwF,aAEdxB,EAAAsG,QAAAtK,EAAAoF,gBACK,GACL,cAKW+E,IAATE,QAAWrK,EAAA+C,cAEbiB,EAAAsG,OAAAtK,EAAAgD,gBACK,GACL,cAKWkH,IAATG,QAAWrK,EAAAwF,aAEbxB,EAAAsG,OAAAtK,EAAAoF,eACK,GACL,cAKW+E,IAATE,SAAYrK,EAAA+C,cAEdiB,EAAAsG,QAAAtK,EAAAgD,iBACK,GACL,cAKAmH,EAAAnG,EAAAuG,SAAAvK,EAAAgD,iBACKhD,EAAAgD,gBACL,WACA,GACFmH,EAAOnK,EAAAgD,gBACL,WACA,GACFmH,GAAOnK,EAAAgD,gBACL,WACA,GACFmH,EAAOnK,EAAA+C,cACL,WACA,sBAEA,cAGE,OAON/C,EAAAQ,SAAQuF,iBAAmB,IAAAmE,GAC3BlK,EAAAQ,SAAQkG,iBAAoB,IAAAyD,IAC5B/M,EAAA6F,WAAgBkH,EAEhB/M,EAAIqJ,YAAAyD,EAGLpF,EAAA9E,YArICkK,EAAAC,OACElH,EAAO+B,KAAAC,MAAgB7H,EACrB6F,cAGC,IADHiH,EACY,CAKb,IAAAlK,EAAA4G,iBAAA,OAAA,EAEK,GAAa,IAAb3D,GAAqBkH,EAAU,GAAAlH,GAAAjD,EAAA+C,cAAA/C,EAAAgD,iBAAAmH,EAAA,EAAA,OAAAnK,EAAAQ,SAAAgK,qBAEnC/D,EAAOrJ,EAAAqJ,cAIJ,IADH0D,EACa,CAKd,IAAAnK,EAAAiG,iBAAA,OAAA,EACD,GAAW,IAAJQ,GAAIyD,EAAA,GAAAzD,GAAAzG,EAAAwF,aAAAxF,EAAAoF,gBAAA8E,EAAA,EAAA,OAAAlK,EAAAQ,SAAAgK,iBAGX,OAAM,EA2GTC,CAAAP,EAAAC,IAAAnG,EAAAqF,uBFhHAqB,eGzBU1K,OACPxC,EAAMwC,EAAA5C,iBAoGCuN,EAAA3G,GAAQ,IAAAlB,WA9EKkB,GAEpB,IAAIkG,EAAOlG,EAAAkG,iCAEQ,IAAXA,QAA2B,IAAAC,IAElCD,GAAA,EAAAlG,EAAA4G,YAAA,EAEGT,EAAEnG,EAAS6G,YAAM,GAEnB7G,EAAA8G,WAAY,IAAA9G,EAAA8G,YAEbZ,GAAA,GAEGC,GAAM,IAERD,GAAUA,GAAAC,GAAAA,IAEXD,EAAA,EAEGC,EAAEnG,EAAQ+G,cAEHR,SAAS,EAAOJ,GAE3BD,GAAgB,CAAOA,EACxBC,GAqDgBa,CAAAhH,GAEXkG,EAAApH,EAAA,GAIAqH,EAAArH,EAAa,GACjB,aAxD6BzB,EAAA6I,EAA4BC,GAQzDzM,IAAIyG,EAAAC,UAAehH,EAAA6N,cAAA,gBAAA,OAAA,QAEN/K,SAAUmB,GAAK,OAA5B,UACE6J,EAAI7J,EAIJ7D,GAAc2N,IAAc/N,GAAA,+CAG5B,IAAIQ,EAAMT,EAAI+N,MAEZf,GAAIvM,EAAYwN,UAAhBC,MAAA,iBAAA,KACEC,EACUJ,EAASK,aAAiBL,EACjCM,aAIJ,GAAAF,EAAA,IACFJ,EAAAjI,UAAA,GAAAkH,EAAA,GAAAe,EAAAjI,UAAAqI,GAAAnB,EAAA,GAAA,OAAA,KAICD,GAAItM,EAAA6N,UAAJJ,MAAA,iBAAA,KACEK,EACUR,EAAUzF,YAAcyF,EAC/BS,YAIJ,GAAAD,EAAA,IACFR,EAAAzE,WAAA,GAAAyD,EAAA,GAAAgB,EAAAzE,WAAAiF,GAAAxB,EAAA,GAAA,OAAA,EAKHgB,EAAYA,EAAArM,kBAGL,EAQP+M,CAAgB5H,EAAA3C,OAAhB6I,EAAAC,GAAA,+EAaEA,EAAA/M,EAAoB6F,WAAAkH,EAAAnK,EAAAQ,SAAAqL,WACfzO,EAAM6F,WAAgBiH,EAAOlK,EAAAQ,SAAAqL,2DAQlC3B,EAAA9M,EAAoBqJ,YAAAyD,EAAAlK,EAAAQ,SAAAqL,WACrBzO,EAAAqJ,YAAA0D,EAAAnK,EAAAQ,SAAAqL,WAEDC,GAAgB,IApBf1O,EAAW6F,WAACkH,EAAqBnK,EAAEQ,SAAAqL,kDAuBpC/G,EAAI9E,KACA8L,YAvIkB5B,EAAcC,GACpC3M,IAAMuH,EACJC,KAAAC,MAAmB7H,EAAQ6F,WACvB8I,EAA2B,IAArB3O,EAAU6F,UAChB+I,EACJjH,EAAkB3H,EAAU6O,eAAiB7O,EAAQmO,aAEnDW,EAAS,IAAA9O,EAAAqJ,gEASbzB,KAAOmH,IAAAhC,GAAenF,KAAAmH,IAASjC,GAAmB6B,GAAIC,EACvDE,GAAAE,KAEQpM,EAAiBQ,SAA1BgK,iBAoHqBC,CAAAP,EAAAC,GACjB2B,IAAgB9H,EAAAqI,UACjBrI,EAAA+E,kBACF/E,EAAAqF,wBAOF,IAAAlH,OAAAmK,QAAAtM,EAAAoJ,MAAArI,KAAA3D,EAAA,QAAAuN,QCxJc,IAAAxI,OAAAoK,cAAAvM,EAAAoJ,MAAArI,KAAA3D,EAAA,aAAAuN,IJgCM6B,eI3BNxM,QAEJsE,eAAcH,EAAQO,uBAC7BlH,EAAMwC,EAAA5C,QAqCJqP,EAAa,GACHC,EAAA,EACVC,EAAA,GAGFC,EAAM,KAuJNzI,EAAEG,eACFtE,EAAEoJ,MAAMrI,KAAK3D,EAAS,aAAYyP,GACnC7M,EAAAoJ,MAAUrI,KAAI3D,EAAA,YAAd0P,GACC9M,EAAAoJ,MAAIrI,KAAO3D,EAAA,WAAX2P,IACI5I,EAAKO,oBACPvC,OAAO6K,cACPhN,EAAEoJ,MAAMrI,KAAK3D,EAAS,cAAayP,GACpC7M,EAAAoJ,MAAUrI,KAAM3D,EAAC,cAAjB0P,GACC9M,EAAEoJ,MAAMrI,KAAK3D,EAAS,YAAe2P,IAC9B5K,OAAM8K,iBACbjN,EAAEoJ,MAAMrI,KAAK3D,EAAS,gBAAeyP,GACtC7M,EAAAoJ,MAAArI,KAAA3D,EAAA,gBAAA0P,GACF9M,EAAAoJ,MAAArI,KAAA3D,EAAA,cAAA2P,cA9KCG,EAAkBC,EAAeC,GAEjChQ,EAAA6F,WAAgBmK,EACjBhQ,EAAAqJ,YAAA0G,EAEGrI,EAAc9E,iBAUd,OAAAgE,EAAAqJ,cAAQrJ,EAAAqJ,cAAA,GAIHrJ,WAIFsJ,EAACtJ,GAGN,QACEA,EAAEuJ,aACgB,QAAlBvJ,EAAEuJ,aACA,IADuBvJ,EACzBwJ,WAIFxJ,EAAAqJ,eAAY,IAAArJ,EAAAqJ,cAAAxL,WACbmC,EAAAuJ,aAAA,UAAAvJ,EAAAuJ,aAAAvJ,EAAAuJ,cAAAvJ,EAAAyJ,gCAOOZ,EAAQ7I,GAEd,GAAAsJ,EAAiBtJ,GAAjB,CACA,IAAAwI,EAAYkB,EAAQ1J,GAEpByI,EAAYjD,MAAQgD,EAAGhD,MAEvBiD,EAAIhE,MAAe+D,EACjB/D,MAEHiE,GAAA,IAAAiB,MAAAC,UAEQ,UAAAC,cAAgCjB,aA+CrCpP,EAAWwG,MAEXxG,EAAMwG,GAAa,KAAKwI,EAAOkB,EAAM1J,GAAO8J,EAAa,CAAOtE,MAAAgD,EAAAhD,MAE1Df,MAAA+D,EAAW/D,OAGb0E,EAAAW,EAA0BtE,MAAQiD,EAAajD,MAInD4D,EAAeU,EAAarF,MAAWgE,EAAAhE,MACvC,YAtDiBpH,EAAA6I,EAAAC,SAENjK,SAAUmB,GAAK,OAA5B,UACE6J,EAAI7J,EAIJ7D,GAAc2N,IAAc/N,GAAA,+CAG5B,IAAIQ,EAAMT,EAAI+N,MAEZf,GAAIvM,EAAYwN,UAAhBC,MAAA,iBAAA,KACEC,EACUJ,EAASK,aAAiBL,EACjCM,aAIJ,GAAAF,EAAA,IACFJ,EAAAjI,UAAA,GAAAkH,EAAA,GAAAe,EAAAjI,UAAAqI,GAAAnB,EAAA,GAAA,OAAA,KAICD,GAAItM,EAAA6N,UAAJJ,MAAA,iBAAA,KACEK,EACUR,EAAUzF,YAAcyF,EAC/BS,YAIJ,GAAAD,EAAA,IACFR,EAAAzE,WAAA,GAAAyD,EAAA,GAAAgB,EAAAzE,WAAAiF,GAAAxB,EAAA,GAAA,OAAA,EAKHgB,EAAYA,EAAArM,kBAGL,EAcL+M,CAA2B5H,EAAA3C,OAAA8L,EAAAC,GAAA,OAE3B5P,EAAiB2P,EAAWC,GAE5B5P,EAAgBsQ,EAChB,IAAIC,GAAJ,IAAAJ,MAAAC,UACEI,EAAUD,EAAcrB,EACxBsB,EAAU,IACVrB,EAAApN,EAAS4N,EAAca,EACxBrB,EAAAtJ,EAAA+J,EAAAY,EAEGtB,EAAAqB,YAzJa7D,EAAQC,GAC3B3M,IAAMyF,EAAU+B,KAAOC,MAAK7H,EAAM6F,WAC5BwD,EAAarJ,EAAQqJ,WAEvBwH,EAAajJ,KAAAmH,IAAAjC,oBAGfgE,EACYD,GAMb,GAAM9D,EAAI,GAAUlH,IAAejD,EAAnC+C,cAAA/C,EAAAgD,iBAAAmH,EAAA,GAAA,IAAAlH,kDAGC,GACGgL,EAAcC,IAOZhE,EAAI,GAAAzD,IAAAzG,EAAAwF,aAAAxF,EAAAoF,gBAAA8E,EAAA,GAAA,IAAAzD,GAAA,OAAA,SAGJ,EAiIRqF,CAAAqB,EAAAC,IAAApJ,EAAAqF,2BAGG0D,IACA/M,EAAAQ,SAAU2N,4BACFvB,KACJwB,aAAc,WACdpO,EAAAqO,cACDR,cAAAjB,GAICD,EAAApN,GAAAoN,EAAAtJ,EAKA2B,KAAAmH,IAAAQ,EAAApN,GAAA,KAAAyF,KAAAmH,IAAAQ,EAAAtJ,GAAA,IACDwK,cAAAjB,GAIC5M,EAAA5C,SAMF8P,EAAc,GAAAP,EAAApN,EAAA,GAAAoN,EAAAtJ,GACbsJ,EAAEpN,GAAA,GACNoN,EAAAtJ,GAAA,IAPIwK,cAAAjB,GAVAiB,cAAAjB,KAkBN,QJpKgC0B,EAAA,SAAAlR,EAAAmR,GAAA,IAAAjN,EAAAX,KAWjC,QAVoB,IAAd4N,IAA2BA,EACnB,IAOU,iBAAjBnR,IAAiBA,EAAAY,SAAAiN,cAAA7N,KAExBA,IAAmBA,EAAQoR,SAAK,MAAA,IAAA9P,MAAA,0DAQ9B,IAAI,IAACjB,KANLkD,KAAKvD,QAAQA,EACbA,EAAW6C,UAAOG,IAAAf,GAIlBsB,KAAKH,mBAzC8B,CAAE,aAAY,aAAS,WAAQ,QACpE,SAEA8H,mBAAoB,KACpBF,mBAAmB,KACnB3H,mBAAmB,IACnBuF,oBAAiB,EACjBW,oBAAiB,EACjBZ,iBAAiB,EACjBW,iBAAgB,EAChByH,aAAA,EACAM,kBAAa,EACdjE,kBAAA,EAACqB,WAAA,GA8BO0C,EAAsB5N,KAAAH,SAAA/C,GAAA8Q,EAAA9Q,GAC3BkD,KAAKyE,eAAe,KACpBzE,KAAKqC,gBAAgB,KAErBxF,KAAMgI,aAAK,UAAMzC,cAAW,KAA6B,IAWvD2L,EADAC,EAVwDjP,EAAA,WACpD,OAAItC,EAAA6C,UAAMG,IAAAf,EAAAK,QAA4CkP,EAAA,WAExD,OAAMxR,EAAW6C,UAASrB,OAASS,EAAUK,QAIjDiB,KAAKwG,MAAL,QAAKhK,EAAAC,GAAmBkM,WAChB,IAAN9L,KAAM2J,OAAA/J,EAAqB6C,UAAQG,IAAUf,QAC7C3B,kBACAiR,EAAuBvR,EAAAqJ,WAEvBrJ,EAAQqJ,YAAa,EACvBiI,EAAStR,EAAMqJ,WAAA,EACdrJ,EAAAqJ,WAAAkI,EACID,GAIP/N,KAAO6F,yBAAwB7F,KAAAkO,iBAAyBzR,EAAAqI,YAAArI,EAAAuO,YAAA,EAEtDhL,KAAKyI,MAAA,IAAApH,EACPrB,KAAAsI,cAAsB7L,EAAK6L,eAAcjL,SACvC2C,KAAKgF,eAAoB9H,EAAKwB,EAAQG,KAAS,MACjDpC,EAAOyI,YAAelF,KAAAgF,gBACtBhF,KAAOqH,WAAWnK,EAAAwB,EAAuBC,MAAE,MACzCqB,KAAKgF,eAAeE,YAAWlF,KAASqH,YACxCrH,KAAKqH,WAAW8G,aAAK,WAAoB,GACzCnO,KAAKyI,MAAArI,KAAAJ,KAAgBqH,WAAO,QAAAtI,GAC5BiB,KAAKyI,MAAArI,KAAAJ,KAAeqH,WAAO,OAAA4G,GAC3BjO,KAAKsF,iBAAiB,KACtBzI,KAAM6I,gBAAqB,KAC3B1F,KAAK4F,eAAgB,KACrB,IAAIwI,EAAW5R,EAAAwD,KAAAgF,qBACb4B,iBAAK9D,SAAuBsL,EAAQzH,OAAA,IACtC0H,MAAOrO,KAAA4G,mBACN5G,KACC0G,yBAA4B,EAE1B1G,KAAC8G,cACHjE,EAAMuL,EAAWvH,sCAEnBO,KAAQkH,iBAAmBzL,EAAEuL,EAAAG,iBAAA1L,EAAAuL,EAAAI,kBAAkB7R,EAAEqD,KAAAgF,eAAA,CAC7CyJ,QAAC,eAE0BjJ,iBAAW3C,EAAAuL,EAAAM,YAAA7L,EAAAuL,EAAAO,aAAAhS,EAAEqD,KAAAgF,eAAA,CACxCyJ,QAAC,KAGLzO,KAAKuF,WAAA,KACPvF,KAAAyF,WAAU,KACRzF,KAAKmF,eAAoBjI,EAAKwB,EAAQG,KAAS,MACjDpC,EAAOyI,YAAelF,KAAAmF,gBACtBnF,KAAOsH,WAAWpK,EAAAwB,EAAuBC,MAAE,MACzCqB,KAAKmF,eAAeD,YAAWlF,KAASsH,YACxCtH,KAAKsH,WAAW6G,aAAK,WAAoB,GACzCnO,KAAKyI,MAAArI,KAAAJ,KAAgBsH,WAAO,QAAAvI,GAC5BiB,KAAKyI,MAAArI,KAAAJ,KAAgBsH,WAAO,OAAA2G,GAC5BjO,KAAKiG,iBAAgB,KACrBpJ,KAAMwJ,iBAAqB,KAC3BrG,KAAKsG,cAAe,KACpB,IAAIsI,EAAWpS,EAAAwD,KAAAmF,qBACb8B,gBAAKnE,SAAsB8L,EAAQ5H,MAAA,IACrCqH,MAAOrO,KAAAiH,kBACNjH,KACC6O,wBAA2B,EAEzB7O,KAACmH,eAAoBtE,EAAO+L,EAASnI,OACpCzG,KAAA6O,wBACG,EACRzH,KAAQF,qBAAqBlH,KAAAwG,eHhHvB/J,GAMT,IAAAqS,EAAAtS,EAAAC,GAEY,OAAboG,EAAAiM,EAAAnK,OAAA9B,EAAAiM,EAAAC,aAAAlM,EAAAiM,EAAAE,cAAAnM,EAAAiM,EAAAP,iBAAA1L,EAAAiM,EAAAN,kBGwGiCS,CAAAjP,KAAAsH,YAAA,UAAEC,iBAAgB1E,EAAA+L,EAAAM,gBAAArM,EAAA+L,EAAAO,mBAAAxS,EAAEqD,KAAAmF,eAAA,CAC7CsJ,QAAC,eAE0BtI,kBAAWtD,EAAA+L,EAAAQ,WAAAvM,EAAA+L,EAAAS,cAAA1S,EAAEqD,KAAAmF,eAAA,CACxCsJ,QAAC,KAGPzO,KAAOkG,YAAP,UACKE,WACS,UAKT3D,MACC,CAKH7D,EAAAnC,EAAAqJ,YAAA,EAAA,QAAArJ,EAAAqJ,YAAA9F,KAAA6E,aAAA7E,KAAAyE,eAAA,MAAA,KAEG/B,EAACjG,EAAU6F,WAAI,EAAA,QAAA7F,EAAA6F,WAAAtC,KAAAoC,cAAApC,KAAAqC,gBAAA,MAAA,WAEwBzC,SAAG,EAA0BI,KAACH,SAAAI,SAAAmD,SAAA,SAAAkM,GAErE,OAACrP,EAAaqP,GAAc3O,MAElCX,KAAOuP,cAAgBlL,KAAAC,MAAiB7H,EAAA6F,gBAAIkN,eAAQ/S,EAAUqJ,WAAA9F,KAACyI,MAAArI,KAAAJ,KAAAvD,QAAA,UAAA,SAAA4G,GAC7D,OAAA1C,EAAe8O,SAAIpM,MAGvBc,EAAAnE,4CAMSA,KAAAJ,UAKLwH,KAAQvB,yBAAqB7F,KAAAkO,iBAAAlO,KAAAvD,QAAAqI,YAAA9E,KAAAvD,QAAAuO,YAAA,EAAkBrO,EAAEqD,KAAAgF,eAAA,CACzCyJ,QAAK,UAAkC9R,EAAEqD,KAAAmF,eAAA,CAC7CsJ,QAAC,2GAQLrH,KAAQjB,kBAAqBtD,EAAArG,EAAAwD,KAAAmF,gBAAAiK,WAAAvM,EAAArG,EAAAwD,KAAAmF,gBAAAkK,cAAiB1S,EAAEqD,KAAAgF,eAAA,CACxCyJ,QAAK,SAAiC9R,EAAEqD,KAAAmF,eAAA,CAEhDsJ,QAAA,SAGAtK,EAAAnE,MAEAoH,EAAapH,KAAc,MAAE,GAAA,GAAA,KAAaA,KAAA,OAAA,GAAA,GAAA,GAAArD,EAAEqD,KAAAgF,eAAA,CACpCyJ,QAAK,KAA6B9R,EAAEqD,KAAAmF,eAAA,CAC9CsJ,QAAA,SAOEhR,UAAmBgS,SAAA,SAAApM,GACnBrD,KAAAJ,UACAuE,EAAAnE,MAMA6B,EAAkB7B,KAAG,MAAUA,KAAKvD,QAAQ6F,UAAUtC,KAAAuP,eACxD1N,EAAO7B,KAAiB,OAAKA,KAAQvD,QAAUqJ,WAAA9F,KAAAwP,gBAC/CxP,KAAAuP,cAAAlL,KAAAC,MAAAtE,KAAAvD,QAAA6F,WAEFtC,KAAAwP,eAAAxP,KAAEvD,QAAAqJ,eAKarI,UAASiS,QAAA,WACtBC,KAAa/P,UACb+P,KAAAA,MAAiB9O,YACjB8O,EAAa3P,KAAKqH,YAClBsI,EAAa3P,KAAKsH,YAChBrJ,EAAK+B,KAAAgF,uCAGLhF,KAAK4P,kBAEL5P,KAAKvD,QAAU,KACfuD,KAAKqH,WAAA,KACLrH,KAAKsH,WAAA,KAELtH,KAAKgF,eAAe,KACtBhF,KAAAmF,eAAA,KAEFnF,KAAAJ,SAAA,MAGuBnC,UAAUmS,gBAAA,WAAgB5P,KAC1CvD,QAAQU,UAAA6C,KAAAvD,QAAAU,UAAA0S,MAAA,KAAAtR,QAAA,SAAAuC,GACZ,OAAAA,EAAA4J,MAAA","sources":["node_modules/perfect-scrollbar/src/lib/css.js","node_modules/perfect-scrollbar/src/lib/dom.js","node_modules/perfect-scrollbar/src/lib/class-names.js","node_modules/perfect-scrollbar/src/lib/event-manager.js","node_modules/perfect-scrollbar/src/process-scroll-diff.js","node_modules/perfect-scrollbar/src/lib/util.js","node_modules/perfect-scrollbar/src/update-geometry.js","node_modules/perfect-scrollbar/src/handlers/drag-thumb.js","node_modules/perfect-scrollbar/src/index.js","node_modules/perfect-scrollbar/src/handlers/click-rail.js","node_modules/perfect-scrollbar/src/handlers/keyboard.js","node_modules/perfect-scrollbar/src/handlers/mouse-wheel.js","node_modules/perfect-scrollbar/src/handlers/touch.js"],"sourcesContent":["export function get(element) {\r\n  return getComputedStyle(element);\r\n}\r\n\r\nexport function set(element, obj) {\r\n  for (const key in obj) {\r\n    let val = obj[key];\r\n    if (typeof val === 'number') {\r\n      val = `${val}px`;\r\n    }\r\n    element.style[key] = val;\r\n  }\r\n  return element;\r\n}\r\n","export function div(className) {\r\n  const div = document.createElement('div');\r\n  div.className = className;\r\n  return div;\r\n}\r\n\r\nconst elMatches =\r\n  typeof Element !== 'undefined' &&\r\n  (Element.prototype.matches ||\r\n    Element.prototype.webkitMatchesSelector ||\r\n    Element.prototype.mozMatchesSelector ||\r\n    Element.prototype.msMatchesSelector);\r\n\r\nexport function matches(element, query) {\r\n  if (!elMatches) {\r\n    throw new Error('No element matching method supported');\r\n  }\r\n\r\n  return elMatches.call(element, query);\r\n}\r\n\r\nexport function remove(element) {\r\n  if (element.remove) {\r\n    element.remove();\r\n  } else {\r\n    if (element.parentNode) {\r\n      element.parentNode.removeChild(element);\r\n    }\r\n  }\r\n}\r\n\r\nexport function queryChildren(element, selector) {\r\n  return Array.prototype.filter.call(element.children, child =>\r\n    matches(child, selector)\r\n  );\r\n}\r\n","const cls = {\r\n  main: 'ps',\r\n  rtl: 'ps__rtl',\r\n  element: {\r\n    thumb: x => `ps__thumb-${x}`,\r\n    rail: x => `ps__rail-${x}`,\r\n    consuming: 'ps__child--consume',\r\n  },\r\n  state: {\r\n    focus: 'ps--focus',\r\n    clicking: 'ps--clicking',\r\n    active: x => `ps--active-${x}`,\r\n    scrolling: x => `ps--scrolling-${x}`,\r\n  },\r\n};\r\n\r\nexport default cls;\r\n\r\n/*\r\n * Helper methods\r\n */\r\nconst scrollingClassTimeout = { x: null, y: null };\r\n\r\nexport function addScrollingClass(i, x) {\r\n  const classList = i.element.classList;\r\n  const className = cls.state.scrolling(x);\r\n\r\n  if (classList.contains(className)) {\r\n    clearTimeout(scrollingClassTimeout[x]);\r\n  } else {\r\n    classList.add(className);\r\n  }\r\n}\r\n\r\nexport function removeScrollingClass(i, x) {\r\n  scrollingClassTimeout[x] = setTimeout(\r\n    () => i.isAlive && i.element.classList.remove(cls.state.scrolling(x)),\r\n    i.settings.scrollingThreshold\r\n  );\r\n}\r\n\r\nexport function setScrollingClassInstantly(i, x) {\r\n  addScrollingClass(i, x);\r\n  removeScrollingClass(i, x);\r\n}\r\n","class EventElement {\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.handlers = {};\r\n  }\r\n\r\n  bind(eventName, handler) {\r\n    if (typeof this.handlers[eventName] === 'undefined') {\r\n      this.handlers[eventName] = [];\r\n    }\r\n    this.handlers[eventName].push(handler);\r\n    this.element.addEventListener(eventName, handler, false);\r\n  }\r\n\r\n  unbind(eventName, target) {\r\n    this.handlers[eventName] = this.handlers[eventName].filter(handler => {\r\n      if (target && handler !== target) {\r\n        return true;\r\n      }\r\n      this.element.removeEventListener(eventName, handler, false);\r\n      return false;\r\n    });\r\n  }\r\n\r\n  unbindAll() {\r\n    for (const name in this.handlers) {\r\n      this.unbind(name);\r\n    }\r\n  }\r\n\r\n  get isEmpty() {\r\n    return Object.keys(this.handlers).every(\r\n      key => this.handlers[key].length === 0\r\n    );\r\n  }\r\n}\r\n\r\nexport default class EventManager {\r\n  constructor() {\r\n    this.eventElements = [];\r\n  }\r\n\r\n  eventElement(element) {\r\n    let ee = this.eventElements.filter(ee => ee.element === element)[0];\r\n    if (!ee) {\r\n      ee = new EventElement(element);\r\n      this.eventElements.push(ee);\r\n    }\r\n    return ee;\r\n  }\r\n\r\n  bind(element, eventName, handler) {\r\n    this.eventElement(element).bind(eventName, handler);\r\n  }\r\n\r\n  unbind(element, eventName, handler) {\r\n    const ee = this.eventElement(element);\r\n    ee.unbind(eventName, handler);\r\n\r\n    if (ee.isEmpty) {\r\n      // remove\r\n      this.eventElements.splice(this.eventElements.indexOf(ee), 1);\r\n    }\r\n  }\r\n\r\n  unbindAll() {\r\n    this.eventElements.forEach(e => e.unbindAll());\r\n    this.eventElements = [];\r\n  }\r\n\r\n  once(element, eventName, handler) {\r\n    const ee = this.eventElement(element);\r\n    const onceHandler = evt => {\r\n      ee.unbind(eventName, onceHandler);\r\n      handler(evt);\r\n    };\r\n    ee.bind(eventName, onceHandler);\r\n  }\r\n}\r\n","import { setScrollingClassInstantly } from './lib/class-names';\r\n\r\nfunction createEvent(name) {\r\n  if (typeof window.CustomEvent === 'function') {\r\n    return new CustomEvent(name);\r\n  } else {\r\n    const evt = document.createEvent('CustomEvent');\r\n    evt.initCustomEvent(name, false, false, undefined);\r\n    return evt;\r\n  }\r\n}\r\n\r\nexport default function(\r\n  i,\r\n  axis,\r\n  diff,\r\n  useScrollingClass = true,\r\n  forceFireReachEvent = false\r\n) {\r\n  let fields;\r\n  if (axis === 'top') {\r\n    fields = [\r\n      'contentHeight',\r\n      'containerHeight',\r\n      'scrollTop',\r\n      'y',\r\n      'up',\r\n      'down',\r\n    ];\r\n  } else if (axis === 'left') {\r\n    fields = [\r\n      'contentWidth',\r\n      'containerWidth',\r\n      'scrollLeft',\r\n      'x',\r\n      'left',\r\n      'right',\r\n    ];\r\n  } else {\r\n    throw new Error('A proper axis should be provided');\r\n  }\r\n\r\n  processScrollDiff(i, diff, fields, useScrollingClass, forceFireReachEvent);\r\n}\r\n\r\nfunction processScrollDiff(\r\n  i,\r\n  diff,\r\n  [contentHeight, containerHeight, scrollTop, y, up, down],\r\n  useScrollingClass = true,\r\n  forceFireReachEvent = false\r\n) {\r\n  const element = i.element;\r\n\r\n  // reset reach\r\n  i.reach[y] = null;\r\n\r\n  // 1 for subpixel rounding\r\n  if (element[scrollTop] < 1) {\r\n    i.reach[y] = 'start';\r\n  }\r\n\r\n  // 1 for subpixel rounding\r\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\r\n    i.reach[y] = 'end';\r\n  }\r\n\r\n  if (diff) {\r\n    element.dispatchEvent(createEvent(`ps-scroll-${y}`));\r\n\r\n    if (diff < 0) {\r\n      element.dispatchEvent(createEvent(`ps-scroll-${up}`));\r\n    } else if (diff > 0) {\r\n      element.dispatchEvent(createEvent(`ps-scroll-${down}`));\r\n    }\r\n\r\n    if (useScrollingClass) {\r\n      setScrollingClassInstantly(i, y);\r\n    }\r\n  }\r\n\r\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\r\n    element.dispatchEvent(createEvent(`ps-${y}-reach-${i.reach[y]}`));\r\n  }\r\n}\r\n","import * as CSS from './css';\r\nimport * as DOM from './dom';\r\n\r\nexport function toInt(x) {\r\n  return parseInt(x, 10) || 0;\r\n}\r\n\r\nexport function isEditable(el) {\r\n  return (\r\n    DOM.matches(el, 'input,[contenteditable]') ||\r\n    DOM.matches(el, 'select,[contenteditable]') ||\r\n    DOM.matches(el, 'textarea,[contenteditable]') ||\r\n    DOM.matches(el, 'button,[contenteditable]')\r\n  );\r\n}\r\n\r\nexport function outerWidth(element) {\r\n  const styles = CSS.get(element);\r\n  return (\r\n    toInt(styles.width) +\r\n    toInt(styles.paddingLeft) +\r\n    toInt(styles.paddingRight) +\r\n    toInt(styles.borderLeftWidth) +\r\n    toInt(styles.borderRightWidth)\r\n  );\r\n}\r\n\r\nexport const env = {\r\n  isWebKit:\r\n    typeof document !== 'undefined' &&\r\n    'WebkitAppearance' in document.documentElement.style,\r\n  supportsTouch:\r\n    typeof window !== 'undefined' &&\r\n    ('ontouchstart' in window ||\r\n      ('maxTouchPoints' in window.navigator &&\r\n        window.navigator.maxTouchPoints > 0) ||\r\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\r\n  supportsIePointer:\r\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\r\n  isChrome:\r\n    typeof navigator !== 'undefined' &&\r\n    /Chrome/i.test(navigator && navigator.userAgent),\r\n};\r\n","import * as CSS from './lib/css';\r\nimport * as DOM from './lib/dom';\r\nimport cls from './lib/class-names';\r\nimport { toInt } from './lib/util';\r\n\r\nexport default function(i) {\r\n  const element = i.element;\r\n  const roundedScrollTop = Math.floor(element.scrollTop);\r\n  const rect = element.getBoundingClientRect();\r\n\r\n  i.containerWidth = Math.round(rect.width);\r\n  i.containerHeight = Math.round(rect.height);\r\n\r\n  i.contentWidth = element.scrollWidth;\r\n  i.contentHeight = element.scrollHeight;\r\n\r\n  if (!element.contains(i.scrollbarXRail)) {\r\n    // clean up and append\r\n    DOM.queryChildren(element, cls.element.rail('x')).forEach(el =>\r\n      DOM.remove(el)\r\n    );\r\n    element.appendChild(i.scrollbarXRail);\r\n  }\r\n  if (!element.contains(i.scrollbarYRail)) {\r\n    // clean up and append\r\n    DOM.queryChildren(element, cls.element.rail('y')).forEach(el =>\r\n      DOM.remove(el)\r\n    );\r\n    element.appendChild(i.scrollbarYRail);\r\n  }\r\n\r\n  if (\r\n    !i.settings.suppressScrollX &&\r\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\r\n  ) {\r\n    i.scrollbarXActive = true;\r\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\r\n    i.railXRatio = i.containerWidth / i.railXWidth;\r\n    i.scrollbarXWidth = getThumbSize(\r\n      i,\r\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\r\n    );\r\n    i.scrollbarXLeft = toInt(\r\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\r\n        (i.railXWidth - i.scrollbarXWidth)) /\r\n        (i.contentWidth - i.containerWidth)\r\n    );\r\n  } else {\r\n    i.scrollbarXActive = false;\r\n  }\r\n\r\n  if (\r\n    !i.settings.suppressScrollY &&\r\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\r\n  ) {\r\n    i.scrollbarYActive = true;\r\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\r\n    i.railYRatio = i.containerHeight / i.railYHeight;\r\n    i.scrollbarYHeight = getThumbSize(\r\n      i,\r\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\r\n    );\r\n    i.scrollbarYTop = toInt(\r\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\r\n        (i.contentHeight - i.containerHeight)\r\n    );\r\n  } else {\r\n    i.scrollbarYActive = false;\r\n  }\r\n\r\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\r\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\r\n  }\r\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\r\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\r\n  }\r\n\r\n  updateCss(element, i);\r\n\r\n  if (i.scrollbarXActive) {\r\n    element.classList.add(cls.state.active('x'));\r\n  } else {\r\n    element.classList.remove(cls.state.active('x'));\r\n    i.scrollbarXWidth = 0;\r\n    i.scrollbarXLeft = 0;\r\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\r\n  }\r\n  if (i.scrollbarYActive) {\r\n    element.classList.add(cls.state.active('y'));\r\n  } else {\r\n    element.classList.remove(cls.state.active('y'));\r\n    i.scrollbarYHeight = 0;\r\n    i.scrollbarYTop = 0;\r\n    element.scrollTop = 0;\r\n  }\r\n}\r\n\r\nfunction getThumbSize(i, thumbSize) {\r\n  if (i.settings.minScrollbarLength) {\r\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\r\n  }\r\n  if (i.settings.maxScrollbarLength) {\r\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\r\n  }\r\n  return thumbSize;\r\n}\r\n\r\nfunction updateCss(element, i) {\r\n  const xRailOffset = { width: i.railXWidth };\r\n  const roundedScrollTop = Math.floor(element.scrollTop);\r\n\r\n  if (i.isRtl) {\r\n    xRailOffset.left =\r\n      i.negativeScrollAdjustment +\r\n      element.scrollLeft +\r\n      i.containerWidth -\r\n      i.contentWidth;\r\n  } else {\r\n    xRailOffset.left = element.scrollLeft;\r\n  }\r\n  if (i.isScrollbarXUsingBottom) {\r\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\r\n  } else {\r\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\r\n  }\r\n  CSS.set(i.scrollbarXRail, xRailOffset);\r\n\r\n  const yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\r\n  if (i.isScrollbarYUsingRight) {\r\n    if (i.isRtl) {\r\n      yRailOffset.right =\r\n        i.contentWidth -\r\n        (i.negativeScrollAdjustment + element.scrollLeft) -\r\n        i.scrollbarYRight -\r\n        i.scrollbarYOuterWidth -\r\n        9;\r\n    } else {\r\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\r\n    }\r\n  } else {\r\n    if (i.isRtl) {\r\n      yRailOffset.left =\r\n        i.negativeScrollAdjustment +\r\n        element.scrollLeft +\r\n        i.containerWidth * 2 -\r\n        i.contentWidth -\r\n        i.scrollbarYLeft -\r\n        i.scrollbarYOuterWidth;\r\n    } else {\r\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\r\n    }\r\n  }\r\n  CSS.set(i.scrollbarYRail, yRailOffset);\r\n\r\n  CSS.set(i.scrollbarX, {\r\n    left: i.scrollbarXLeft,\r\n    width: i.scrollbarXWidth - i.railBorderXWidth,\r\n  });\r\n  CSS.set(i.scrollbarY, {\r\n    top: i.scrollbarYTop,\r\n    height: i.scrollbarYHeight - i.railBorderYWidth,\r\n  });\r\n}\r\n","import * as CSS from '../lib/css';\r\nimport * as DOM from '../lib/dom';\r\nimport cls, {\r\n  addScrollingClass,\r\n  removeScrollingClass,\r\n} from '../lib/class-names';\r\nimport updateGeometry from '../update-geometry';\r\nimport { toInt } from '../lib/util';\r\n\r\nexport default function(i) {\r\n  bindMouseScrollHandler(i, [\r\n    'containerWidth',\r\n    'contentWidth',\r\n    'pageX',\r\n    'railXWidth',\r\n    'scrollbarX',\r\n    'scrollbarXWidth',\r\n    'scrollLeft',\r\n    'x',\r\n    'scrollbarXRail',\r\n  ]);\r\n  bindMouseScrollHandler(i, [\r\n    'containerHeight',\r\n    'contentHeight',\r\n    'pageY',\r\n    'railYHeight',\r\n    'scrollbarY',\r\n    'scrollbarYHeight',\r\n    'scrollTop',\r\n    'y',\r\n    'scrollbarYRail',\r\n  ]);\r\n}\r\n\r\nfunction bindMouseScrollHandler(\r\n  i,\r\n  [\r\n    containerHeight,\r\n    contentHeight,\r\n    pageY,\r\n    railYHeight,\r\n    scrollbarY,\r\n    scrollbarYHeight,\r\n    scrollTop,\r\n    y,\r\n    scrollbarYRail,\r\n  ]\r\n) {\r\n  const element = i.element;\r\n\r\n  let startingScrollTop = null;\r\n  let startingMousePageY = null;\r\n  let scrollBy = null;\r\n\r\n  function mouseMoveHandler(e) {\r\n    if (e.touches && e.touches[0]) {\r\n      e[pageY] = e.touches[0].pageY;\r\n    }\r\n    element[scrollTop] =\r\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\r\n    addScrollingClass(i, y);\r\n    updateGeometry(i);\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  function mouseUpHandler() {\r\n    removeScrollingClass(i, y);\r\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\r\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\r\n  }\r\n\r\n  function bindMoves(e, touchMode) {\r\n    startingScrollTop = element[scrollTop];\r\n    if (touchMode && e.touches) {\r\n      e[pageY] = e.touches[0].pageY;\r\n    }\r\n    startingMousePageY = e[pageY];\r\n    scrollBy =\r\n      (i[contentHeight] - i[containerHeight]) /\r\n      (i[railYHeight] - i[scrollbarYHeight]);\r\n    if (!touchMode) {\r\n      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\r\n      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\r\n      e.preventDefault();\r\n    } else {\r\n      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);\r\n    }\r\n\r\n    i[scrollbarYRail].classList.add(cls.state.clicking);\r\n\r\n    e.stopPropagation();\r\n  }\r\n\r\n  i.event.bind(i[scrollbarY], 'mousedown', e => {\r\n    bindMoves(e);\r\n  });\r\n  i.event.bind(i[scrollbarY], 'touchstart', e => {\r\n    bindMoves(e, true);\r\n  });\r\n}\r\n","import * as CSS from './lib/css';\r\nimport * as DOM from './lib/dom';\r\nimport cls from './lib/class-names';\r\nimport EventManager from './lib/event-manager';\r\nimport processScrollDiff from './process-scroll-diff';\r\nimport updateGeometry from './update-geometry';\r\nimport { toInt, outerWidth } from './lib/util';\r\n\r\nimport clickRail from './handlers/click-rail';\r\nimport dragThumb from './handlers/drag-thumb';\r\nimport keyboard from './handlers/keyboard';\r\nimport wheel from './handlers/mouse-wheel';\r\nimport touch from './handlers/touch';\r\n\r\nconst defaultSettings = () => ({\r\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\r\n  maxScrollbarLength: null,\r\n  minScrollbarLength: null,\r\n  scrollingThreshold: 1000,\r\n  scrollXMarginOffset: 0,\r\n  scrollYMarginOffset: 0,\r\n  suppressScrollX: false,\r\n  suppressScrollY: false,\r\n  swipeEasing: true,\r\n  useBothWheelAxes: false,\r\n  wheelPropagation: true,\r\n  wheelSpeed: 1,\r\n});\r\n\r\nconst handlers = {\r\n  'click-rail': clickRail,\r\n  'drag-thumb': dragThumb,\r\n  keyboard,\r\n  wheel,\r\n  touch,\r\n};\r\n\r\nexport default class PerfectScrollbar {\r\n  constructor(element, userSettings = {}) {\r\n    if (typeof element === 'string') {\r\n      element = document.querySelector(element);\r\n    }\r\n\r\n    if (!element || !element.nodeName) {\r\n      throw new Error('no element is specified to initialize PerfectScrollbar');\r\n    }\r\n\r\n    this.element = element;\r\n\r\n    element.classList.add(cls.main);\r\n\r\n    this.settings = defaultSettings();\r\n    for (const key in userSettings) {\r\n      this.settings[key] = userSettings[key];\r\n    }\r\n\r\n    this.containerWidth = null;\r\n    this.containerHeight = null;\r\n    this.contentWidth = null;\r\n    this.contentHeight = null;\r\n\r\n    const focus = () => element.classList.add(cls.state.focus);\r\n    const blur = () => element.classList.remove(cls.state.focus);\r\n\r\n    this.isRtl = CSS.get(element).direction === 'rtl';\r\n    if (this.isRtl === true) {\r\n      element.classList.add(cls.rtl);\r\n    }\r\n    this.isNegativeScroll = (() => {\r\n      const originalScrollLeft = element.scrollLeft;\r\n      let result = null;\r\n      element.scrollLeft = -1;\r\n      result = element.scrollLeft < 0;\r\n      element.scrollLeft = originalScrollLeft;\r\n      return result;\r\n    })();\r\n    this.negativeScrollAdjustment = this.isNegativeScroll\r\n      ? element.scrollWidth - element.clientWidth\r\n      : 0;\r\n    this.event = new EventManager();\r\n    this.ownerDocument = element.ownerDocument || document;\r\n\r\n    this.scrollbarXRail = DOM.div(cls.element.rail('x'));\r\n    element.appendChild(this.scrollbarXRail);\r\n    this.scrollbarX = DOM.div(cls.element.thumb('x'));\r\n    this.scrollbarXRail.appendChild(this.scrollbarX);\r\n    this.scrollbarX.setAttribute('tabindex', 0);\r\n    this.event.bind(this.scrollbarX, 'focus', focus);\r\n    this.event.bind(this.scrollbarX, 'blur', blur);\r\n    this.scrollbarXActive = null;\r\n    this.scrollbarXWidth = null;\r\n    this.scrollbarXLeft = null;\r\n    const railXStyle = CSS.get(this.scrollbarXRail);\r\n    this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\r\n    if (isNaN(this.scrollbarXBottom)) {\r\n      this.isScrollbarXUsingBottom = false;\r\n      this.scrollbarXTop = toInt(railXStyle.top);\r\n    } else {\r\n      this.isScrollbarXUsingBottom = true;\r\n    }\r\n    this.railBorderXWidth =\r\n      toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\r\n    // Set rail to display:block to calculate margins\r\n    CSS.set(this.scrollbarXRail, { display: 'block' });\r\n    this.railXMarginWidth =\r\n      toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\r\n    CSS.set(this.scrollbarXRail, { display: '' });\r\n    this.railXWidth = null;\r\n    this.railXRatio = null;\r\n\r\n    this.scrollbarYRail = DOM.div(cls.element.rail('y'));\r\n    element.appendChild(this.scrollbarYRail);\r\n    this.scrollbarY = DOM.div(cls.element.thumb('y'));\r\n    this.scrollbarYRail.appendChild(this.scrollbarY);\r\n    this.scrollbarY.setAttribute('tabindex', 0);\r\n    this.event.bind(this.scrollbarY, 'focus', focus);\r\n    this.event.bind(this.scrollbarY, 'blur', blur);\r\n    this.scrollbarYActive = null;\r\n    this.scrollbarYHeight = null;\r\n    this.scrollbarYTop = null;\r\n    const railYStyle = CSS.get(this.scrollbarYRail);\r\n    this.scrollbarYRight = parseInt(railYStyle.right, 10);\r\n    if (isNaN(this.scrollbarYRight)) {\r\n      this.isScrollbarYUsingRight = false;\r\n      this.scrollbarYLeft = toInt(railYStyle.left);\r\n    } else {\r\n      this.isScrollbarYUsingRight = true;\r\n    }\r\n    this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\r\n    this.railBorderYWidth =\r\n      toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\r\n    CSS.set(this.scrollbarYRail, { display: 'block' });\r\n    this.railYMarginHeight =\r\n      toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\r\n    CSS.set(this.scrollbarYRail, { display: '' });\r\n    this.railYHeight = null;\r\n    this.railYRatio = null;\r\n\r\n    this.reach = {\r\n      x:\r\n        element.scrollLeft <= 0\r\n          ? 'start'\r\n          : element.scrollLeft >= this.contentWidth - this.containerWidth\r\n          ? 'end'\r\n          : null,\r\n      y:\r\n        element.scrollTop <= 0\r\n          ? 'start'\r\n          : element.scrollTop >= this.contentHeight - this.containerHeight\r\n          ? 'end'\r\n          : null,\r\n    };\r\n\r\n    this.isAlive = true;\r\n\r\n    this.settings.handlers.forEach(handlerName => handlers[handlerName](this));\r\n\r\n    this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\r\n    this.lastScrollLeft = element.scrollLeft; // for onScroll only\r\n    this.event.bind(this.element, 'scroll', e => this.onScroll(e));\r\n    updateGeometry(this);\r\n  }\r\n\r\n  update() {\r\n    if (!this.isAlive) {\r\n      return;\r\n    }\r\n\r\n    // Recalcuate negative scrollLeft adjustment\r\n    this.negativeScrollAdjustment = this.isNegativeScroll\r\n      ? this.element.scrollWidth - this.element.clientWidth\r\n      : 0;\r\n\r\n    // Recalculate rail margins\r\n    CSS.set(this.scrollbarXRail, { display: 'block' });\r\n    CSS.set(this.scrollbarYRail, { display: 'block' });\r\n    this.railXMarginWidth =\r\n      toInt(CSS.get(this.scrollbarXRail).marginLeft) +\r\n      toInt(CSS.get(this.scrollbarXRail).marginRight);\r\n    this.railYMarginHeight =\r\n      toInt(CSS.get(this.scrollbarYRail).marginTop) +\r\n      toInt(CSS.get(this.scrollbarYRail).marginBottom);\r\n\r\n    // Hide scrollbars not to affect scrollWidth and scrollHeight\r\n    CSS.set(this.scrollbarXRail, { display: 'none' });\r\n    CSS.set(this.scrollbarYRail, { display: 'none' });\r\n\r\n    updateGeometry(this);\r\n\r\n    processScrollDiff(this, 'top', 0, false, true);\r\n    processScrollDiff(this, 'left', 0, false, true);\r\n\r\n    CSS.set(this.scrollbarXRail, { display: '' });\r\n    CSS.set(this.scrollbarYRail, { display: '' });\r\n  }\r\n\r\n  onScroll(e) {\r\n    if (!this.isAlive) {\r\n      return;\r\n    }\r\n\r\n    updateGeometry(this);\r\n    processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\r\n    processScrollDiff(\r\n      this,\r\n      'left',\r\n      this.element.scrollLeft - this.lastScrollLeft\r\n    );\r\n\r\n    this.lastScrollTop = Math.floor(this.element.scrollTop);\r\n    this.lastScrollLeft = this.element.scrollLeft;\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.isAlive) {\r\n      return;\r\n    }\r\n\r\n    this.event.unbindAll();\r\n    DOM.remove(this.scrollbarX);\r\n    DOM.remove(this.scrollbarY);\r\n    DOM.remove(this.scrollbarXRail);\r\n    DOM.remove(this.scrollbarYRail);\r\n    this.removePsClasses();\r\n\r\n    // unset elements\r\n    this.element = null;\r\n    this.scrollbarX = null;\r\n    this.scrollbarY = null;\r\n    this.scrollbarXRail = null;\r\n    this.scrollbarYRail = null;\r\n\r\n    this.isAlive = false;\r\n  }\r\n\r\n  removePsClasses() {\r\n    this.element.className = this.element.className\r\n      .split(' ')\r\n      .filter(name => !name.match(/^ps([-_].+|)$/))\r\n      .join(' ');\r\n  }\r\n}\r\n","import updateGeometry from '../update-geometry';\r\n\r\nexport default function(i) {\r\n  const element = i.element;\r\n\r\n  i.event.bind(i.scrollbarY, 'mousedown', e => e.stopPropagation());\r\n  i.event.bind(i.scrollbarYRail, 'mousedown', e => {\r\n    const positionTop =\r\n      e.pageY -\r\n      window.pageYOffset -\r\n      i.scrollbarYRail.getBoundingClientRect().top;\r\n    const direction = positionTop > i.scrollbarYTop ? 1 : -1;\r\n\r\n    i.element.scrollTop += direction * i.containerHeight;\r\n    updateGeometry(i);\r\n\r\n    e.stopPropagation();\r\n  });\r\n\r\n  i.event.bind(i.scrollbarX, 'mousedown', e => e.stopPropagation());\r\n  i.event.bind(i.scrollbarXRail, 'mousedown', e => {\r\n    const positionLeft =\r\n      e.pageX -\r\n      window.pageXOffset -\r\n      i.scrollbarXRail.getBoundingClientRect().left;\r\n    const direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\r\n\r\n    i.element.scrollLeft += direction * i.containerWidth;\r\n    updateGeometry(i);\r\n\r\n    e.stopPropagation();\r\n  });\r\n}\r\n","import * as DOM from '../lib/dom';\r\nimport updateGeometry from '../update-geometry';\r\nimport { isEditable } from '../lib/util';\r\n\r\nexport default function(i) {\r\n  const element = i.element;\r\n\r\n  const elementHovered = () => DOM.matches(element, ':hover');\r\n  const scrollbarFocused = () =>\r\n    DOM.matches(i.scrollbarX, ':focus') || DOM.matches(i.scrollbarY, ':focus');\r\n\r\n  function shouldPreventDefault(deltaX, deltaY) {\r\n    const scrollTop = Math.floor(element.scrollTop);\r\n    if (deltaX === 0) {\r\n      if (!i.scrollbarYActive) {\r\n        return false;\r\n      }\r\n      if (\r\n        (scrollTop === 0 && deltaY > 0) ||\r\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\r\n      ) {\r\n        return !i.settings.wheelPropagation;\r\n      }\r\n    }\r\n\r\n    const scrollLeft = element.scrollLeft;\r\n    if (deltaY === 0) {\r\n      if (!i.scrollbarXActive) {\r\n        return false;\r\n      }\r\n      if (\r\n        (scrollLeft === 0 && deltaX < 0) ||\r\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\r\n      ) {\r\n        return !i.settings.wheelPropagation;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  i.event.bind(i.ownerDocument, 'keydown', e => {\r\n    if (\r\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\r\n      e.defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (!elementHovered() && !scrollbarFocused()) {\r\n      return;\r\n    }\r\n\r\n    let activeElement = document.activeElement\r\n      ? document.activeElement\r\n      : i.ownerDocument.activeElement;\r\n    if (activeElement) {\r\n      if (activeElement.tagName === 'IFRAME') {\r\n        activeElement = activeElement.contentDocument.activeElement;\r\n      } else {\r\n        // go deeper if element is a webcomponent\r\n        while (activeElement.shadowRoot) {\r\n          activeElement = activeElement.shadowRoot.activeElement;\r\n        }\r\n      }\r\n      if (isEditable(activeElement)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    let deltaX = 0;\r\n    let deltaY = 0;\r\n\r\n    switch (e.which) {\r\n      case 37: // left\r\n        if (e.metaKey) {\r\n          deltaX = -i.contentWidth;\r\n        } else if (e.altKey) {\r\n          deltaX = -i.containerWidth;\r\n        } else {\r\n          deltaX = -30;\r\n        }\r\n        break;\r\n      case 38: // up\r\n        if (e.metaKey) {\r\n          deltaY = i.contentHeight;\r\n        } else if (e.altKey) {\r\n          deltaY = i.containerHeight;\r\n        } else {\r\n          deltaY = 30;\r\n        }\r\n        break;\r\n      case 39: // right\r\n        if (e.metaKey) {\r\n          deltaX = i.contentWidth;\r\n        } else if (e.altKey) {\r\n          deltaX = i.containerWidth;\r\n        } else {\r\n          deltaX = 30;\r\n        }\r\n        break;\r\n      case 40: // down\r\n        if (e.metaKey) {\r\n          deltaY = -i.contentHeight;\r\n        } else if (e.altKey) {\r\n          deltaY = -i.containerHeight;\r\n        } else {\r\n          deltaY = -30;\r\n        }\r\n        break;\r\n      case 32: // space bar\r\n        if (e.shiftKey) {\r\n          deltaY = i.containerHeight;\r\n        } else {\r\n          deltaY = -i.containerHeight;\r\n        }\r\n        break;\r\n      case 33: // page up\r\n        deltaY = i.containerHeight;\r\n        break;\r\n      case 34: // page down\r\n        deltaY = -i.containerHeight;\r\n        break;\r\n      case 36: // home\r\n        deltaY = i.contentHeight;\r\n        break;\r\n      case 35: // end\r\n        deltaY = -i.contentHeight;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    if (i.settings.suppressScrollX && deltaX !== 0) {\r\n      return;\r\n    }\r\n    if (i.settings.suppressScrollY && deltaY !== 0) {\r\n      return;\r\n    }\r\n\r\n    element.scrollTop -= deltaY;\r\n    element.scrollLeft += deltaX;\r\n    updateGeometry(i);\r\n\r\n    if (shouldPreventDefault(deltaX, deltaY)) {\r\n      e.preventDefault();\r\n    }\r\n  });\r\n}\r\n","import * as CSS from '../lib/css';\r\nimport cls from '../lib/class-names';\r\nimport updateGeometry from '../update-geometry';\r\nimport { env } from '../lib/util';\r\n\r\nexport default function(i) {\r\n  const element = i.element;\r\n\r\n  let shouldPrevent = false;\r\n\r\n  function shouldPreventDefault(deltaX, deltaY) {\r\n    const roundedScrollTop = Math.floor(element.scrollTop);\r\n    const isTop = element.scrollTop === 0;\r\n    const isBottom =\r\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\r\n    const isLeft = element.scrollLeft === 0;\r\n    const isRight =\r\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\r\n\r\n    let hitsBound;\r\n\r\n    // pick axis with primary direction\r\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\r\n      hitsBound = isTop || isBottom;\r\n    } else {\r\n      hitsBound = isLeft || isRight;\r\n    }\r\n\r\n    return hitsBound ? !i.settings.wheelPropagation : true;\r\n  }\r\n\r\n  function getDeltaFromEvent(e) {\r\n    let deltaX = e.deltaX;\r\n    let deltaY = -1 * e.deltaY;\r\n\r\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\r\n      // OS X Safari\r\n      deltaX = (-1 * e.wheelDeltaX) / 6;\r\n      deltaY = e.wheelDeltaY / 6;\r\n    }\r\n\r\n    if (e.deltaMode && e.deltaMode === 1) {\r\n      // Firefox in deltaMode 1: Line scrolling\r\n      deltaX *= 10;\r\n      deltaY *= 10;\r\n    }\r\n\r\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\r\n      // IE in some mouse drivers\r\n      deltaX = 0;\r\n      deltaY = e.wheelDelta;\r\n    }\r\n\r\n    if (e.shiftKey) {\r\n      // reverse axis with shift key\r\n      return [-deltaY, -deltaX];\r\n    }\r\n    return [deltaX, deltaY];\r\n  }\r\n\r\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\r\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\r\n    if (!env.isWebKit && element.querySelector('select:focus')) {\r\n      return true;\r\n    }\r\n\r\n    if (!element.contains(target)) {\r\n      return false;\r\n    }\r\n\r\n    let cursor = target;\r\n\r\n    while (cursor && cursor !== element) {\r\n      if (cursor.classList.contains(cls.element.consuming)) {\r\n        return true;\r\n      }\r\n\r\n      const style = CSS.get(cursor);\r\n\r\n      // if deltaY && vertical scrollable\r\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\r\n        const maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\r\n        if (maxScrollTop > 0) {\r\n          if (\r\n            (cursor.scrollTop > 0 && deltaY < 0) ||\r\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      // if deltaX && horizontal scrollable\r\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\r\n        const maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\r\n        if (maxScrollLeft > 0) {\r\n          if (\r\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\r\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n\r\n      cursor = cursor.parentNode;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function mousewheelHandler(e) {\r\n    const [deltaX, deltaY] = getDeltaFromEvent(e);\r\n\r\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\r\n      return;\r\n    }\r\n\r\n    let shouldPrevent = false;\r\n    if (!i.settings.useBothWheelAxes) {\r\n      // deltaX will only be used for horizontal scrolling and deltaY will\r\n      // only be used for vertical scrolling - this is the default\r\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\r\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\r\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\r\n      // only vertical scrollbar is active and useBothWheelAxes option is\r\n      // active, so let's scroll vertical bar using both mouse wheel axes\r\n      if (deltaY) {\r\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\r\n      } else {\r\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\r\n      }\r\n      shouldPrevent = true;\r\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\r\n      // useBothWheelAxes and only horizontal bar is active, so use both\r\n      // wheel axes for horizontal bar\r\n      if (deltaX) {\r\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\r\n      } else {\r\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\r\n      }\r\n      shouldPrevent = true;\r\n    }\r\n\r\n    updateGeometry(i);\r\n\r\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\r\n    if (shouldPrevent && !e.ctrlKey) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  if (typeof window.onwheel !== 'undefined') {\r\n    i.event.bind(element, 'wheel', mousewheelHandler);\r\n  } else if (typeof window.onmousewheel !== 'undefined') {\r\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\r\n  }\r\n}\r\n","import updateGeometry from '../update-geometry';\r\nimport cls from '../lib/class-names';\r\nimport * as CSS from '../lib/css';\r\nimport { env } from '../lib/util';\r\n\r\nexport default function(i) {\r\n  if (!env.supportsTouch && !env.supportsIePointer) {\r\n    return;\r\n  }\r\n\r\n  const element = i.element;\r\n\r\n  function shouldPrevent(deltaX, deltaY) {\r\n    const scrollTop = Math.floor(element.scrollTop);\r\n    const scrollLeft = element.scrollLeft;\r\n    const magnitudeX = Math.abs(deltaX);\r\n    const magnitudeY = Math.abs(deltaY);\r\n\r\n    if (magnitudeY > magnitudeX) {\r\n      // user is perhaps trying to swipe up/down the page\r\n\r\n      if (\r\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\r\n        (deltaY > 0 && scrollTop === 0)\r\n      ) {\r\n        // set prevent for mobile Chrome refresh\r\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\r\n      }\r\n    } else if (magnitudeX > magnitudeY) {\r\n      // user is perhaps trying to swipe left/right across the page\r\n\r\n      if (\r\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\r\n        (deltaX > 0 && scrollLeft === 0)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function applyTouchMove(differenceX, differenceY) {\r\n    element.scrollTop -= differenceY;\r\n    element.scrollLeft -= differenceX;\r\n\r\n    updateGeometry(i);\r\n  }\r\n\r\n  let startOffset = {};\r\n  let startTime = 0;\r\n  let speed = {};\r\n  let easingLoop = null;\r\n\r\n  function getTouch(e) {\r\n    if (e.targetTouches) {\r\n      return e.targetTouches[0];\r\n    } else {\r\n      // Maybe IE pointer\r\n      return e;\r\n    }\r\n  }\r\n\r\n  function shouldHandle(e) {\r\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\r\n      return false;\r\n    }\r\n    if (e.targetTouches && e.targetTouches.length === 1) {\r\n      return true;\r\n    }\r\n    if (\r\n      e.pointerType &&\r\n      e.pointerType !== 'mouse' &&\r\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function touchStart(e) {\r\n    if (!shouldHandle(e)) {\r\n      return;\r\n    }\r\n\r\n    const touch = getTouch(e);\r\n\r\n    startOffset.pageX = touch.pageX;\r\n    startOffset.pageY = touch.pageY;\r\n\r\n    startTime = new Date().getTime();\r\n\r\n    if (easingLoop !== null) {\r\n      clearInterval(easingLoop);\r\n    }\r\n  }\r\n\r\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\r\n    if (!element.contains(target)) {\r\n      return false;\r\n    }\r\n\r\n    let cursor = target;\r\n\r\n    while (cursor && cursor !== element) {\r\n      if (cursor.classList.contains(cls.element.consuming)) {\r\n        return true;\r\n      }\r\n\r\n      const style = CSS.get(cursor);\r\n\r\n      // if deltaY && vertical scrollable\r\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\r\n        const maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\r\n        if (maxScrollTop > 0) {\r\n          if (\r\n            (cursor.scrollTop > 0 && deltaY < 0) ||\r\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      // if deltaX && horizontal scrollable\r\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\r\n        const maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\r\n        if (maxScrollLeft > 0) {\r\n          if (\r\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\r\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n\r\n      cursor = cursor.parentNode;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function touchMove(e) {\r\n    if (shouldHandle(e)) {\r\n      const touch = getTouch(e);\r\n\r\n      const currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\r\n\r\n      const differenceX = currentOffset.pageX - startOffset.pageX;\r\n      const differenceY = currentOffset.pageY - startOffset.pageY;\r\n\r\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\r\n        return;\r\n      }\r\n\r\n      applyTouchMove(differenceX, differenceY);\r\n      startOffset = currentOffset;\r\n\r\n      const currentTime = new Date().getTime();\r\n\r\n      const timeGap = currentTime - startTime;\r\n      if (timeGap > 0) {\r\n        speed.x = differenceX / timeGap;\r\n        speed.y = differenceY / timeGap;\r\n        startTime = currentTime;\r\n      }\r\n\r\n      if (shouldPrevent(differenceX, differenceY)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  function touchEnd() {\r\n    if (i.settings.swipeEasing) {\r\n      clearInterval(easingLoop);\r\n      easingLoop = setInterval(function() {\r\n        if (i.isInitialized) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        if (!speed.x && !speed.y) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        if (!i.element) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        applyTouchMove(speed.x * 30, speed.y * 30);\r\n\r\n        speed.x *= 0.8;\r\n        speed.y *= 0.8;\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  if (env.supportsTouch) {\r\n    i.event.bind(element, 'touchstart', touchStart);\r\n    i.event.bind(element, 'touchmove', touchMove);\r\n    i.event.bind(element, 'touchend', touchEnd);\r\n  } else if (env.supportsIePointer) {\r\n    if (window.PointerEvent) {\r\n      i.event.bind(element, 'pointerdown', touchStart);\r\n      i.event.bind(element, 'pointermove', touchMove);\r\n      i.event.bind(element, 'pointerup', touchEnd);\r\n    } else if (window.MSPointerEvent) {\r\n      i.event.bind(element, 'MSPointerDown', touchStart);\r\n      i.event.bind(element, 'MSPointerMove', touchMove);\r\n      i.event.bind(element, 'MSPointerUp', touchEnd);\r\n    }\r\n  }\r\n}\r\n"],"names":["get","element","getComputedStyle","set","obj","const","key","let","val","style","div1","className","div","document","createElement","elMatches","Element","prototype","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","query","Error","call","remove","parentNode","removeChild","queryChildren","selector","Array","filter","children","child","cls","thumb","x","rail","consuming","focus","clicking","active","scrolling","scrollingClassTimeout","addScrollingClass","i","classList","contains","clearTimeout","add","removeScrollingClass","setTimeout","isAlive","settings","scrollingThreshold","EventElement","this","handlers","isEmpty","configurable","bind","eventName","handler","push","addEventListener","unbind","target","this$1","removeEventListener","unbindAll","name","Object","keys","every","length","defineProperties","prototypeAccessors","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","undefined","processScrollDiff","axis","diff","useScrollingClass","forceFireReachEvent","fields","ref","contentHeight","containerHeight","scrollTop","up","down","reach","y","dispatchEvent","setScrollingClassInstantly","toInt","parseInt","eventElement","ee1","ee","splice","indexOf","forEach","e","once","onceHandler","env","isWebKit","documentElement","supportsTouch","navigator","maxTouchPoints","DocumentTouch","supportsIePointer","msMaxTouchPoints","test","userAgent","updateGeometry","roundedScrollTop","Math","floor","rect","getBoundingClientRect","containerWidth","round","width","height","contentWidth","scrollWidth","DOM.queryChildren","scrollbarXRail","el","appendChild","scrollbarYRail","suppressScrollX","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","isRtl","left","isScrollbarXUsingBottom","bottom","scrollbarXBottom","top","scrollbarXTop","yRailOffset","right","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","CSS.set","scrollbarX","scrollbarY","railBorderYWidth","thumbSize","minScrollbarLength","max","maxScrollbarLength","min","bindMouseScrollHandler","pageY","startingScrollTop","scrollBy","mouseMoveHandler","touches","startingMousePageY","stopPropagation","mouseUpHandler","ownerDocument","bindMoves","touchMode","event","preventDefault","direction","pageYOffset","pageX","pageXOffset","keyboard","DOM.matches","isDefaultPrevented","defaultPrevented","activeElement","tagName","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","altKey","shiftKey","wheelPropagation","shouldPreventDefault","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","getDeltaFromEvent","querySelector","cursor","CSS.get","overflowY","match","maxScrollTop","scrollHeight","clientHeight","overflowX","maxScrollLeft","clientWidth","shouldBeConsumedByChild","wheelSpeed","shouldPrevent","isTop","isBottom","offsetHeight","isLeft","abs","isRight","ctrlKey","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","getTouch","Date","getTime","clearInterval","currentOffset","currentTime","timeGap","magnitudeX","magnitudeY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","nodeName","useBothWheelAxes","result","originalScrollLeft","blur","isNegativeScroll","setAttribute","railXStyle","isNaN","railBorderXWidth","borderLeftWidth","borderRightWidth","display","marginLeft","marginRight","railYStyle","isScrollbarYUsingRight","styles","paddingLeft","paddingRight","outerWidth","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","destroy","DOM.remove","removePsClasses","split"],"version":3,"file":"index.771d5422.js.map"}